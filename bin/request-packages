#!/usr/bin/env ruby

require 'json'
require 'open-uri'
require 'parallel'


PACKAGES_URL = 'http://package.elm-lang.org/new-packages'
PACKAGES_DATA_FILE = 'src/packages.json'
POST_REQUEST_SLEEP = 0.1

# Set this in environment to have script request only a subset of all package
# `elm-package.json`s (and so complete much faster).
TEST_SCRIPT_VARIABLE = 'TEST_REQUEST_PACKAGES'


def main
  package_names = request_json(PACKAGES_URL)
  if testing_script?
    first_test_package = 'elm-lang/core'
    first_test_package_index = package_names.find_index(first_test_package)
    package_names = package_names[first_test_package_index..(first_test_package_index + 20)]
  end

  packages_map = request_packages(package_names)

  File.write(PACKAGES_DATA_FILE, JSON.pretty_generate(packages_map))
end

def testing_script?
  !!ENV[TEST_SCRIPT_VARIABLE]
end

def request_packages(package_names)
  progress_bar_options = {
    format: "%a %e %P% %c/%C %b"
  }

  Parallel.map(package_names, progress: progress_bar_options) do |package_name|
    [package_name, request_elm_package_json(package_name)].tap do
      sleep POST_REQUEST_SLEEP
    end
  end.to_h
end

def request_elm_package_json(package_name)
  # Potential `elm-package.json` (or equivalent file) URLs, in order of
  # likeliness for where it will be found. We request each in turn or raise
  # error if not found when we request the last (strictly speaking we should
  # probably only continue requesting if a request fails with a 404; this
  # probably doesn't matter much though).
  potential_elm_package_json_urls = [
    raw_github_url(package_name, 'elm-package.json'),
    raw_github_url(package_name, 'elm.json'),
  ]

  potential_elm_package_json_urls.each do |url|
    begin
      return request_json(url)
    rescue OpenURI::HTTPError
      raise if url == potential_elm_package_json_urls.last
    end
  end
end

def raw_github_url(package_name, file_name)
  "https://raw.githubusercontent.com/#{package_name}/master/#{file_name}"
end

def request_json(url)
  response = open(url, 'User-Agent' => 'bob.whitelock1@gmail.com').read
  JSON.parse(response)
end

main
